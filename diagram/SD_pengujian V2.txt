@startuml
hide footbox
title Proses Pengujian\n

actor Peneliti
boundary UI
control Ekspresi_wajah
control Render_template
entity Database
control Deteksi_wajah
control OpenCV
control Praproses

activate Ekspresi_wajah
ref over Ekspresi_wajah, Praproses : Proses Pelatihan

activate Peneliti
Peneliti -> UI : uji1()
activate UI
UI -> Ekspresi_wajah : pengujian1()


	Ekspresi_wajah -> Database : select_data_uji()
	activate Database
	Database --> Ekspresi_wajah : data
	deactivate Database

	loop for i in range(jumlah_data)

		Ekspresi_wajah -> Ekspresi_wajah : uji_ciri_sendiri(id_file, path, nama_file, data_latih)
		activate Ekspresi_wajah

		Ekspresi_wajah -> Deteksi_wajah : resize_image(image, nama_file, 'uji', 'uji')
		activate Deteksi_wajah
		Deteksi_wajah --> Ekspresi_wajah : path
		deactivate Deteksi_wajah

		Ekspresi_wajah -> OpenCV : deteksi(path)
		activate OpenCV
		OpenCV --> Ekspresi_wajah : faces, img
		deactivate OpenCV

		alt if len(data_latih) == 0
			Ekspresi_wajah -> Database : select_ciri('ciri_pelatihan', 'S')
			activate Database
			Database --> Ekspresi_wajah : kumpulan_ciri

			Ekspresi_wajah -> Database : select_kelas('ciri_pelatihan', 'S')
			Database --> Ekspresi_wajah : kumpulan_kelas

		else
			Ekspresi_wajah-> Ekspresi_wajah: ambil_data(data_latih)
			activate Ekspresi_wajah
			deactivate Ekspresi_wajah
			Ekspresi_wajah --> Ekspresi_wajah : kumpulan_kelas, kumpulan_ciri
		end

		loop for kelas_s in kumpulan_kelas_s
			Ekspresi_wajah -> Database : select_avg('ciri_pelatihan', kelas_s)
			Database --> Ekspresi_wajah : data_rata_rata
			deactivate Database
		end

		

		loop for i, f in enumerate(faces)
			Ekspresi_wajah -> Praproses : biner(path_wajah)
			activate Praproses
			Praproses --> Ekspresi_wajah : img_biner
			deactivate Praproses

			create control GMI
			Ekspresi_wajah -> GMI : <<GMI(sub_face)>>
			activate GMI
			Ekspresi_wajah -> GMI : hitungMomenNormalisasi()
			Ekspresi_wajah -> GMI : hitungCiri()
			GMI --> Ekspresi_wajah : ciri
			deactivate GMI

			create control Klasifikasi
			Ekspresi_wajah -> Klasifikasi : <<Klasifikasi(kumpulan_ciri_s, kumpulan_kelas_s)>>
			activate Klasifikasi
			Ekspresi_wajah -> Klasifikasi : classify([ciri])
			Klasifikasi --> Ekspresi_wajah : ekspresi
			deactivate Klasifikasi

			Ekspresi_wajah -> Database : insert_ciri('ciri_pengujian', ciri, 'S')
			activate Database
			Ekspresi_wajah -> Database : select_first_row()
			Database --> Ekspresi_wajah : data
			Ekspresi_wajah -> Database : insert_pengujian(data_pengujian)
			Ekspresi_wajah -> Database : select_pengujian_first_row()
			Database --> Ekspresi_wajah : data_pengujian
			deactivate Database
		end


		Ekspresi_wajah -> Database : select_hasil('hasil_sendiri', id_file, waktu_s)
		activate Database
		Database --> Ekspresi_wajah : data_hasil
		Ekspresi_wajah -> Database : insert_hasil(hasil_all_s)
		deactivate Database

		Ekspresi_wajah --> Ekspresi_wajah :file_name_s, directory, hasil_all_s, id_pengujian_update, id_ciri_s

		deactivate Ekspresi_wajah



	

		Ekspresi_wajah -> Ekspresi_wajah : uji_ciri_opencv(id_file, path, nama_file, direktori, id_pengujian_update, semua_hasil_s['waktu'], data_latih)

		activate Ekspresi_wajah

		Ekspresi_wajah -> OpenCV : deteksi(path)
		activate OpenCV
		OpenCV --> Ekspresi_wajah : faces, img
		deactivate OpenCV

	alt if len(data_latih) == 0
		Ekspresi_wajah -> Database : select_ciri('ciri_pelatihan', 'O')
		activate Database
		Database --> Ekspresi_wajah : kumpulan_ciri

		Ekspresi_wajah -> Database : select_kelas('ciri_pelatihan', 'O')
		Database --> Ekspresi_wajah : kumpulan_kelas
		

	else
		Ekspresi_wajah-> Ekspresi_wajah: ambil_data(data_latih)
		activate Ekspresi_wajah
		deactivate Ekspresi_wajah
		Ekspresi_wajah --> Ekspresi_wajah : kumpulan_kelas, kumpulan_ciri
	end

	loop for kelas_o in kumpulan_kelas_o
		Ekspresi_wajah -> Database : select_avg('ciri_pelatihan', kelas_o)
		Database --> Ekspresi_wajah : data_rata_rata
		deactivate Database
	end
		

	loop for i, f in enumerate(faces)
		Ekspresi_wajah -> Praproses : biner(path_wajah)
		activate Praproses
		Praproses --> Ekspresi_wajah : img_biner
		deactivate Praproses

		Ekspresi_wajah -> OpenCV : gmi_OpenCV(sub_face)
		activate OpenCV
		OpenCV --> Ekspresi_wajah : ciricv
		deactivate OpenCV

		create control Klasifikasi
		Ekspresi_wajah -> Klasifikasi : <<Klasifikasi(kumpulan_ciri_o, kumpulan_kelas_o)>>
		activate Klasifikasi
		Ekspresi_wajah -> Klasifikasi : classify([ciricv])
		Klasifikasi --> Ekspresi_wajah : ekspresi
		deactivate Klasifikasi

		Ekspresi_wajah -> Database : insert_ciri('ciri_pengujian', ciricv, 'O')
		activate Database
		Ekspresi_wajah -> Database : select_first_row()
		Database --> Ekspresi_wajah : data
		Ekspresi_wajah -> Database : update_pengujian(data_pengujian)
		deactivate Database		
	end



	Ekspresi_wajah -> Database : select_hasil('hasil_opencv', id_file, waktu_s)
	activate Database
	Database --> Ekspresi_wajah : data_hasil
	Ekspresi_wajah -> Database : insert_hasil(hasil_all_o)
	deactivate Database

	Ekspresi_wajah --> Ekspresi_wajah : file_name_o, hasil_all_o, jumlah_data_teruji, id_ciri_o
	deactivate Ekspresi_wajah

	end

	Ekspresi_wajah -> Database : select_hasil_ciri_pengujian_s(waktu_mulai_uji, waktu_akhir_uji)
	activate Database
	Database --> Ekspresi_wajah : data
	Ekspresi_wajah -> Database : select_hasil_ciri_pengujian_o(waktu_mulai_uji, waktu_akhir_uji)
	Database --> Ekspresi_wajah : data
	deactivate Database

	Ekspresi_wajah -> Render_template : tampilan_pengujian1(files, target_akhir, hasil_final_s, hasil_final_o, waktu, akurasi, jumlah_data_teruji, direktori)

	activate Render_template
	deactivate Render_template


Peneliti -> UI : uji2()
UI -> Ekspresi_wajah : pengujian2()

	Ekspresi_wajah -> Database : select_ciri('ciri_pelatihan', 'S')
	activate Database
	Database --> Ekspresi_wajah : kumpulan_ciri

	Ekspresi_wajah -> Database : select_kelas('ciri_pelatihan', 'S')
	Database --> Ekspresi_wajah : kumpulan_kelas
	deactivate Database
	
	
	Ekspresi_wajah -> Render_template : tampilan_pengujian2(semua_hasil)
	deactivate Ekspresi_wajah
	activate Render_template
	deactivate Render_template
@enduml


